<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:lang="http://www.springframework.org/schema/lang"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:sec="http://www.springframework.org/schema/security"

       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
          http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
          http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
          http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd
          http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
          http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
          http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
">

    <!-- begin Spring Security config -->
    <sec:global-method-security secured-annotations="enabled" />

    <!-- Don't SSL encrypt static resources -->
    <sec:http pattern="/resources/**" security="none"/>

    <sec:http auto-config="true" access-denied-page="/interface/acesso/access-denied.xhtml">
            
        <!-- On Glassfish, dev ports are 8080 and 8181, whereas on
        production its 80 and 443 -->
        <sec:port-mappings>
            <sec:port-mapping http="8080" https="8181"/>
        </sec:port-mappings>

        <sec:intercept-url 
            pattern="/interface/parametros/**" 
            access="ROLE_ADMIN" requires-channel="https" />
        <sec:intercept-url 
             pattern="/interface/cadastros/**" 
            access="ROLE_USER, ROLE_ADMIN" requires-channel="https" />
         <sec:intercept-url 
             pattern="/interface/nfe/**" 
            access="ROLE_USER, ROLE_ADMIN" requires-channel="https" />
         
<!--        <sec:intercept-url 
            pattern="/**" 
            access="IS_AUTHENTICATED_ANONYMOUSLY"/>-->
        <sec:intercept-url pattern="/interface/acesso/login.xhtml" access="IS_AUTHENTICATED_ANONYMOUSLY" /> 
        
        
        <!-- Use O/S provided login window
        <http-basic />
        -->
        <!-- Use custom form for login -->
        <sec:form-login 
            login-processing-url="/j_spring_security_check"
            login-page="/interface/acesso/login.xhtml" 
            authentication-success-handler-ref="myAuthenticationHandler"
            authentication-failure-url="/interface/acesso/login.xhtml"/>
            
        <sec:logout logout-url="/j_spring_security_logout" 
                    invalidate-session="true" 
                    logout-success-url="/interface/acesso/login.xhtml" />

    </sec:http>
 
    <sec:authentication-manager alias="authenticationManager">
        <sec:authentication-provider>
            <sec:password-encoder ref="encoderBean">
                <sec:salt-source user-property="username"/>
            </sec:password-encoder>
            <!--<sec:jdbc-user-service data-source-ref="dataSource" />--> 
            
            <!-- if not using a database for accounts, hard-code them here
-->           <sec:user-service>
               <sec:user name="admin" password="admin" authorities="ROLE_ADMIN, ROLE_MEMBER" />
               <sec:user name="member" password="member" authorities="ROLE_MEMBER" />
           </sec:user-service><!--
            -->
        </sec:authentication-provider>
    </sec:authentication-manager>
    
    <bean id="myAuthenticationHandler" class="br.com.ararati.faces.MyAuthenticationHandler" />
    
    <bean id="encoderBean" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder">
        <constructor-arg value="512" />
        <property name="iterations" value="1024"/>
    </bean>
    
    
    <!-- Server managed connection pool accessed via JNDI -->
    <jee:jndi-lookup id="dataSource" jndi-name="jdbc/nfe"/>
        
    <!-- (Optional) Automatically receives and logs AuthenticationEvent messages -->
    <bean id="loggerListener" class="org.springframework.security.authentication.event.LoggerListener"/>

</beans>